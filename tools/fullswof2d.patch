Index: Headers/libparameters/misc.hpp
===================================================================
--- Headers/libparameters/misc.hpp	(revision 300)
+++ Headers/libparameters/misc.hpp	(working copy)
@@ -1,9 +1,9 @@
 /**
  * @file misc.hpp
  * @author Olivier Delestre <olivierdelestre41@yahoo.fr> (2008)
- * @author Christian Laguerre <christian.laguerre@math.cnrs.fr> (2012-2014)
- * @version 1.05.00
- * @date 2014-05-23
+ * @author Christian Laguerre <christian.laguerre@math.cnrs.fr> (2012)
+ * @version 1.04.08
+ * @date 2013-11-07
  *
  * @brief Definitions
  * @details 
@@ -15,7 +15,7 @@
  * (c) CNRS - Universite d'Orleans - INRA (France)
  */
 /*
- * This file is part of FullSWOF_2D software. 
+ * This file is part of FullSWOF_1D software. 
  * <https://sourcesup.renater.fr/projects/fullswof-1d/> 
  *
  * FullSWOF_2D = Full Shallow-Water equations for Overland Flow, 
@@ -64,10 +64,9 @@
 #include <sstream>
 #include <cfloat>
 #include <unistd.h>
-#include <ctime>
 
-#define max(a,b) (a>=b?a:b)
-#define min(a,b) (a<=b?a:b)
+//#define max(a,b) (a>=b?a:b)
+//#define min(a,b) (a<=b?a:b)
 
 #define GRAV 9.81
 #define GRAV_DEM 4.905
@@ -77,13 +76,20 @@
 #define VE_CA 1.e-12
 #define MAX_CFL_X 0.
 #define MAX_CFL_Y 0.
+
+// PEANOCLAW EXTENSION
+#if defined(PEANOCLAW_FULLSWOF2D)
+#warning PeanoClaw single iteration mode activated for FullSWOF2D!
+#define MAX_ITER 1
+#else
 #define MAX_ITER 1000000000
+#endif
 /*NB_CHAR is the maximum length of a comment line */
 #define NB_CHAR 256
 #define ZERO 0.
 #define IE_CA 1.e-8
 #define EPSILON 1.e-13
-#define VERSION "FullSWOF_2D version 1.05.00, 2014-05-23"
+#define VERSION "FullSWOF_2D version 1.04.08, 2013-11-07"
 
 //RATIO_CLOSE_CELL is used to verify that the input data is very close to cell center
 #define RATIO_CLOSE_CELL 1.e-3
Index: Headers/libreconstructions/choice_reconstruction.hpp
===================================================================
--- Headers/libreconstructions/choice_reconstruction.hpp	(revision 300)
+++ Headers/libreconstructions/choice_reconstruction.hpp	(working copy)
@@ -1,9 +1,9 @@
 /**
  * @file choice_reconstruction.hpp
  * @author Olivier Delestre <olivierdelestre41@yahoo.fr> (2008)
- * @author Christian Laguerre <christian.laguerre@math.cnrs.fr> (2012-2014)
- * @version 1.05.00
- * @date 2014-05-13
+ * @author Christian Laguerre <christian.laguerre@math.cnrs.fr> (2012)
+ * @version 1.03.00
+ * @date 2012-04-03
  *
  * @brief Choice of reconstruction
  * @details 
@@ -72,6 +72,10 @@
 #include "eno_mod.hpp"
 #endif
 
+#ifndef MUSCL_OPT_HPP
+#include "muscl_opt.hpp"
+#endif
+
 #ifndef CHOICE_RECONSTRUCTION
 #define CHOICE_RECONSTRUCTION
 
@@ -84,19 +88,27 @@
 
 
 class Choice_reconstruction{
+	private :
+		Reconstruction * Rec;
 
 public :
-	/** @brief Constructor */
+		/*!
+		 * \brief Constructor
+		 */
     Choice_reconstruction(Parameters & , TAB &);
 
-	/** @brief Calculates the second order reconstruction in space */
+		/*!
+		 * \brief Calculates the second order reconstructions in space
+		 */
 	void calcul(TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &);
 
-    /** @brief Destructor */
+
+		/*!
+		 * \brief Destructor
+		 */
 	virtual ~ Choice_reconstruction();
 
-private :
-    Reconstruction * Rec;
-    
+        // PEANOCLAW extension:
+        void initialize(TAB& z);
 };
 #endif
Index: Headers/libreconstructions/muscl.hpp
===================================================================
--- Headers/libreconstructions/muscl.hpp	(revision 300)
+++ Headers/libreconstructions/muscl.hpp	(working copy)
@@ -1,9 +1,9 @@
 /**
  * @file muscl.hpp
  * @author Olivier Delestre <olivierdelestre41@yahoo.fr> (2008)
- * @author Christian Laguerre <christian.laguerre@math.cnrs.fr> (2012-2014)
- * @version 1.05.00
- * @date 2014-05-13
+ * @author Christian Laguerre <christian.laguerre@math.cnrs.fr> (2012)
+ * @version 1.03.00
+ * @date 2012-04-03
  *
  * @brief %MUSCL reconstruction
  * @details 
@@ -62,30 +62,44 @@
 #ifndef MUSCL_HPP
 #define MUSCL_HPP
 
-/** @class MUSCL
- * @brief %MUSCL recontruction
- * @details
- * Class that computes %MUSCL reconstruction in space.
+
+/*! @class MUSCL
+ * @brief class which allows to calculate MUSCL reconstruction in space
+ *
+ * In order to get a second order in space, we can use a MUSCL reconstruction.
+ * A scalar fonction \f$s\in R\f$ is reconstructed by the MUSCL reconstruction (Monotonic Upwind Scheme Conservation Law)
+ *\f[\begin{array}{cc}
+s_{i-1/2+}=s_i-\frac{\Delta x}{2}D_{mm}s_i\;\;and& s_{i+1/2-}=s_i+\frac{\Delta x}{2}D_{mm}s_i
+\end{array}\f]
+ * where \f$D_{mm}\f$ writes
+ *\f[D_{mm}s_i=minmod\left(\frac{s_i-s_{i-1}}{\Delta x},\frac{s_{i+1}-s_i}{\Delta x}\right)\f]
+ * with the Minmod slope limiter.
  */
 
 
 class MUSCL: public Reconstruction{
   
+protected :
+  const	int NXCELL;
+  const int NYCELL;
+  
 public :
-    
-    /** @brief Constructor */
+  /*!
+   * \brief Constructor
+   */
 	MUSCL(Parameters & ,TAB &);
     
-	/** @brief Calculates the reconstruction in space */
+  /*!
+   * \brief Calculates the MUSCL reconstruction in space
+   */
 	void calcul(TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &);
     
-	/** @brief Destructor */
+  /*!
+		 * \brief Destructor
+		 */
     ~MUSCL();
    
-private :
-    SCALAR delta_h1,delta_u1,delta_v1,delta_h2,delta_u2,delta_v2;
-	SCALAR du,dv,dh,dz_h;
-    SCALAR a1,a2,a3,a4;
-    
+  // PEANOCLAW extension:
+  virtual void initialize(TAB& z);
 };
 #endif
