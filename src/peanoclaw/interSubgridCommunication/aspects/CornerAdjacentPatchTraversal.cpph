/*
 * CornerAdjacentPatchTraversal.cpph
 *
 *  Created on: Jul 9, 2013
 *      Author: kristof
 */

#include "tarch/Assertions.h"
#include "peano/utils/Loop.h"

template<class LoopBody>
peanoclaw::interSubgridCommunication::aspects::CornerAdjacentPatchTraversal<LoopBody>::CornerAdjacentPatchTraversal(
  peanoclaw::Patch* patches,
  LoopBody& loopBody
) {
  #ifdef Dim3
  for(int destinationIndex = 0; destinationIndex < TWO_POWER_D; destinationIndex++) {
    int sourceIndex = TWO_POWER_D - destinationIndex - 1;

    tarch::la::Vector<DIMENSIONS, int> sourcePosition
      = peano::utils::dDelinearised(TWO_POWER_D - 1 - sourceIndex, 2);

    tarch::la::Vector<DIMENSIONS, int> destinationPosition
      = peano::utils::dDelinearised(TWO_POWER_D - 1 - destinationIndex, 2);

    loopBody(
      patches[sourceIndex],
      sourceIndex,
      patches[destinationIndex],
      destinationIndex,
      destinationPosition - sourcePosition
    );
  }
  #else
  assertionFail("This kind of traversal is not valid in 2D. Use EdgeAdjacentPatchTraversal instead!");
  #endif
}


